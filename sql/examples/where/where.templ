package where_query

import "soikke.li/moreplease/templates"
import "soikke.li/moreplease/sql/highlight"
import "embed"

//go:embed sql/*.sql
var sources embed.FS

//TODO: Change rendering to use classes so we don't flood the page with inline styles.
templ Example() {
    @templates.Base("More SQL Please: WHERE") {
        <div class="content wide">
            <div class="title">
                <h1>More SQL Please: WHERE</h1>
            </div>
            <details class="toggle">
                <summary class="action" data-open="hide tables" data-close="show tables"></summary>
                <div class="container">
                    <div>
                        <pre>
                        users<br><br>
                        | id | name_first | name_last | age |    email_address     |<br>
                        |----|------------|-----------|-----|----------------------|<br>
                        | 1  | Michael    | Soikkeli  | 34  | mike@soikke.li       |<br>
                        | 2  | Pichael    | Soikkeli  | 30  | pike@soikke.li       |<br>
                        | 3  | Michael    | Smith     | 70  | mike@smith.ca        |<br>
                        | 4  | Alana      | Lyons     | 29  | alana@lyons.ca       |<br>
                        | 5  | Bort       | Simpson   | 10  | bort@springfield.gov |<br>
                        </pre>
                    </div>
                </div>
            </details>
            <div class="container">
                <div class="block">
                    A <span>@templ.Raw(highlight.Inline("WHERE"))</span> clause can be added to statements to filter the target of the statement using a condition. In the case of a <span>@templ.Raw(highlight.Inline("SELECT"))</span>, this means the result set is filtered to only include results that match the condition. <span>@templ.Raw(highlight.Inline("WHERE"))</span> can also be applied to <span>@templ.Raw(highlight.Inline("UPDATE"))</span> and <span>@templ.Raw(highlight.Inline("DELETE"))</span> statements to limit the rows they impact.
                </div>
                <div class="block">
                    @templ.Raw(highlight.Block(sources,
                        "sql/where.sql"))
                    <div>
                        <pre>
                            | name_first | name_last |<br>
                            |------------|-----------|<br>
                            | Michael    | Soikkeli  |<br>
                        </pre>
                    </div>
                </div>

                <div class="block">
                    <span>@templ.Raw(highlight.Inline("WHERE"))</span> clauses can use operators besides <span>@templ.Raw(highlight.Inline("="))</span> :<br>
                    <span>@templ.Raw(highlight.Inline(">"))</span> Greater than<br>
                    <span>@templ.Raw(highlight.Inline("<"))</span> Less than<br>
                    <span>@templ.Raw(highlight.Inline(">="))</span> Greater than or equal to<br>
                    <span>@templ.Raw(highlight.Inline("<="))</span> Less than or equal to<br>
                    <span>@templ.Raw(highlight.Inline("<>"))</span>, <span>@templ.Raw(highlight.Inline("!="))</span> Not Equal<br>
                    <span>@templ.Raw(highlight.Inline("BETWEEN x AND y"))</span> Between two values <br>
                    <span>@templ.Raw(highlight.Inline("LIKE \"Mike%\""))</span> Match based on pattern <br>
                    <span>@templ.Raw(highlight.Inline("IN (1,2,3)"))</span> Match based on any value in a list of values or a subquery <br>
                </div>
                <div class="block">
                    @templ.Raw(highlight.Block(sources,
                        "sql/where_operators.sql"))
                    <div>
                        <pre>
                            | id | name_first | name_last | age | email_address  |<br>
                            |----|------------|-----------|-----|----------------|<br>
                            | 1  | Michael    | Soikkeli  | 34  | mike@soikke.li |<br>
                            | 3  | Michael    | Smith     | 70  | mike@smith.ca  |<br>
                        </pre>
                    </div>
                </div>
                <div class="block">
                    <span>@templ.Raw(highlight.Inline("WHERE"))</span> clauses can have multiple predicates separated by logical operators such as <span>@templ.Raw(highlight.Inline("AND"))</span> and <span>@templ.Raw(highlight.Inline("OR"))</span>. See <a href="logical_operators">Logical Operators</a> for more examples.
                </div>
                <div class="block">
                    @templ.Raw(highlight.Block(sources,
                        "sql/where_and.sql"))
                    <div>
                        <pre>
                            | email_address  |<br>
                            |----------------|<br>
                            | mike@soikke.li |<br>
                        </pre>
                    </div>
                </div>
            </div>
        </div>
    }
}

/*
"sql/select_all_columns.sql",
"sql/select_alias.sql",
"sql/select_computation.sql",
*/
