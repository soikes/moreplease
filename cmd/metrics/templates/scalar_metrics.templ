package templates

import (
	"fmt"
	"strconv"
	"time"
)

type ScalarMetrics struct {
	ID                     string
	UniqueVisitors         *ScalarMetric
	PageViews              *ScalarMetric
	AverageSessionDuration *ScalarMetric
}

type ScalarMetric struct {
	data int
	err  error
}

func (s *ScalarMetric) Set(val int) {
	s.data = val
}

func (s *ScalarMetric) Err(err error) {
	s.err = err
}

func (s ScalarMetric) String() string {
	if s.err != nil {
		return "-"
	}
	return strconv.Itoa(s.data)
}

func (s ScalarMetric) Duration() string {
	if s.err != nil {
		return "-"
	}
	return (time.Duration(s.data) * time.Second).String()
}

templ (d ScalarMetrics) Component() {
	<div class="metric tile">
		<span class="heading">Unique Visitors</span>
		<div class="metric-single">
			{ fmt.Sprint(d.UniqueVisitors) }
		</div>
	</div>
	<div class="metric tile">
		<span class="heading">Page Views</span>
		<div class="metric-single">
			{ fmt.Sprint(d.PageViews) }
		</div>
	</div>
	<div class="metric tile">
		<span class="heading">Average Session</span>
		<div class="metric-single">
			{ fmt.Sprint(d.AverageSessionDuration.Duration()) }
		</div>
	</div>
}
