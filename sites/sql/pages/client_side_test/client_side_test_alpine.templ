package client_side_test

import (
    "embed"
    "fmt"

    "soikke.li/moreplease/sites/sql/db"
    "soikke.li/moreplease/sites/sql/render"
    t "soikke.li/moreplease/templates"
)

//go:embed sql
var sqlFiles embed.FS

func init() {
    c := Topic()
    render.RegisterComponent("client_side_test_alpine", c)
}

templ Topic() {
    {{
        s := db.Statements{
            Files: sqlFiles,
            SchemaPath: "sql/schema/schema.sql",
        }
        schema := s.From(s.SchemaPath)
    }}
    @templ.JSONScript("schema", schema)
    @t.Base("More SQL Please: Highlight Client Side Test") {
        <div class="content wide">
            @t.TopicTitle("Client Side Test")
            <div class="container">
                <div>
                    This is a test of running and rendering SQLite queries client-side instead of server side. This will allow users to edit and re-run queries live!
                </div>
                <div class="tile sticky">
                    {{
                        stmt := s.From("sql/functions_nested.sql")
                        data := fmt.Sprintf("{ stmt: `%s`, result: 'running...' }", stmt)
                        init := fmt.Sprintf("db = await Db.load(`%s`);", schema)
                        run := fmt.Sprintf("result = JSON.stringify(db.exec(`${stmt}`));")
                    }}
                    <div x-init={ init } x-data={ data }>
                        <div class="stmt">
                            <textarea
                                spellcheck="false"
                                autocorrect="off"
                                autocapitalize="off"
                                onInput="this.parentNode.dataset.replicatedValue = this.value"
                                @input="$nextTick(() => Prism.highlightElement($refs.codeBlock))"
                                x-init="$nextTick(() => Prism.highlightElement($refs.codeBlock))"
                                x-model="stmt">
                            </textarea>
                            <pre>
                                <code class="language-sql" x-text="stmt" x-ref="codeBlock">
                                </code>
                            </pre>
                        </div>
                        <button class="run" x-on:click={ run }>&#9654; run</button>
                        <p x-text="result"></p>
                    </div>
                </div>
            </div>
        </div>
        <script src="assets/app.js"></script>
    }
}
