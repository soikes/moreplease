package components

import (
	"fmt"
	"github.com/soikes/moreplease/pkg/db"
	"github.com/soikes/moreplease/pkg/model"
	"github.com/soikes/moreplease/sites/sql/assets"
	"github.com/soikes/moreplease/sites/sql/site"
	c "github.com/soikes/moreplease/templates/components"
)

type Schema struct {
	Page       model.Page
	Config     db.Config
	TableNames []string
}

templ (s *Schema) Component() {
	if len(s.TableNames) > 0 {
		<div class="schema">
			<details class="schema__toggle">
				<summary
					class="action heading heading--small schema__summary"
					data-open="hide tables"
					data-close="show tables"
				></summary>
				<div class="content">
					<span class="heading schema__popout">
						@c.Outlink(fmt.Sprintf("/tables/%s", s.Page.ID), "pop out tables")
					</span>
					@innerSchema(s.Config, s.TableNames...)
				</div>
			</details>
		</div>
	}
}

templ (s *Schema) StandaloneSchema() {
	{{
		title := fmt.Sprintf("%s (Tables)", s.Page.Title)
		b := c.Base{
			Title: title,
		}
	}}
	@b.Component(c.HashedImports(c.DefaultImports(), assets.Assets)...) {
		<div class="padded content">
			@c.TopicTitle(site.MSP.Title, title)
			@innerSchema(s.Config, s.TableNames...)
		</div>
	}
}

templ innerSchema(cfg db.Config, tables ...string) {
	<div class="padded-v content content__horizontal">
		for _, table := range tables {
			<div class="example-container tile">
				<div class="example">
					<h3 class="heading--small">
						{ table }
					</h3>
					<div class="table result">
						{ cfg.MustQueryFile(ctx, fmt.Sprintf("schema/dump_%s.sql", table)) }
					</div>
				</div>
			</div>
		}
	</div>
}
